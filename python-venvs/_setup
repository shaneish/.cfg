#!/bin/bash

SRC_DIR=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")
export DEST_DIR="$HOME/.local/python-venvs"

_optional() {
    if [ -e "$1" ]; then
        echo $1
    else
        echo $2
    fi
}

_find_newest_python() {
    for i in $(seq 15 -1 9); do
        if command -v "python3.${i}" 2>&1 >/dev/null; then
            PYTHON_V="3.${i}"
            PYTHON="python${PYTHON_V}"
            $PYTHON -m ensurepip
            echo "Found $PYTHON as most recent version..."
            _create_venv $PYTHON $PYTHON_V $1
        fi
    done
}

_rm() {
  if [ -e "$1" ]; then
    echo "Removing $1..."
    if type -P rip >/dev/null 2>&1; then
      rip $1
    else
      rm -rf $1
    fi
  fi
}

_mkdir() {
    if [ ! -f $1 ]; then
        echo "Making directory $1..."
        mkdir -p $1
    fi
}

_create_venv() {
    echo "Creating $1 virtual environment '$2' using $3..."
    $1 -m venv $2
    source $2/bin/activate
    python -m pip install -r $3
    deactivate
}

__main__() {
    echo $SRC_DIR
    echo $DEST_DIR
    _mkdir "$DEST_DIR"
    cd $DEST_DIR

    if [ $# -eq 0 ]; then
        if [ -z "$2" ]; then
            _create_venv $1 $2 $SRC_DIR/default.txt
        else
            shortened="$(echo $1 | sed 's/python//g')"
            _create_venv $1 $shortened $SRC_DIR/default.txt
        fi
    else
        _find_newest_python $SRC_DIR/default.txt
    fi

    if command -v pypy3 2>&1 >/dev/null; then
        pyp3 -m ensurepip
        _create_venv pypy3 fast $SRC_DIR/default.txt
    fi
}

__main__ $@
